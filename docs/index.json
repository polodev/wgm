[
{
	"uri": "/decks/04-08-2018-wp-tuts-2/",
	"title": "Wp Tuts 2",
	"tags": ["wp"],
  "content": " list of file  index.php style.css screenshot.png functions.php header.php footer.php single.php archive.php search.php content.php content-link.php content-gallery.php content-aside.php content-link.php page.php page-about.php company-template.php front-page.php comments.php  theme name and other meta data /** * Theme Name: Advanced WP; * Author: Jeff Bezos * Author URI: http://jeff.com * Description: Advanced wordpress theme * Version: 1.0 * * /  language attribute in html tag \u0026lt;html \u0026lt;?php language_attributes() ?\u0026gt;\u0026lt;/html\u0026gt;  adding stylesheet url using bloginfo bloginfo('stylesheet_url);  adding meta charset bloginfo('charset') ;  blog title bloginfo('name')  description bloginfo('description')  for wp_head \u0026amp; wp_footer() wp_head() wp_footer(); // responsible for admin menu in view page  search option in wordpress \u0026lt;form method='get' action=\u0026quot;\u0026lt;?php esc_url(home_url('/')) ?\u0026gt;\u0026quot;\u0026gt; \u0026lt;input type=\u0026quot;text\u0026quot; name='s' /\u0026gt; \u0026lt;/form\u0026gt;  body class in wordpress \u0026lt;body \u0026lt;?php body_class() ?\u0026gt;\u0026gt; \u0026lt;/body\u0026gt;  showing nav menu in view $args = [ 'theme_location' =\u0026gt; 'primary' ] wp_nav_menu($args);  adding custom nav menu // functions.php function adv_theme_support(){ register_nav_menus([ 'primary' =\u0026gt; __('Primary Menu'), 'footer' =\u0026gt; __('Footer Menu') ]) } add_action('after_setup_theme', 'adv_theme_support')  for homepage link \u0026lt;a href=\u0026quot;\u0026lt;?php echo home_url('/') ?\u0026gt;\u0026quot;\u0026gt;\u0026lt;/a\u0026gt;  post loop \u0026lt;?php if(have_posts()): ?\u0026gt; \u0026lt;?php while(have_posts()) : the_post() ?\u0026gt; {{postcontent}} \u0026lt;?php endwhile ?\u0026gt; \u0026lt;?php else: ?\u0026gt; \u0026lt;?php wpautop('Sorry, no posts were found') ;?\u0026gt; \u0026lt;?php endif; ?\u0026gt;  for post getting title the_title();  for date and time the_time('F j, Y g:i a')  autor name and link \u0026lt;a href=\u0026quot;\u0026lt;?php echo get_author_posts_url(get_the_author_meta('ID')); ?\u0026gt;\u0026quot;\u0026gt; \u0026lt;?php the_author() ?\u0026gt; \u0026lt;/a\u0026gt;  showing all catergory with category url $categories = get_the_category(); $output = ''; $separator = ', '; if ($categories) { foreach($categories as $category) { $output .= \u0026quot;\u0026lt;a href=\u0026quot;\u0026lt;?php get_category_link($category-\u0026gt;term_id)) ?\u0026gt;\u0026quot;\u0026gt; \u0026lt;?php $category-\u0026gt;cat_name ?\u0026gt; \u0026lt;/a\u0026gt; . \u0026lt;?php echo $separator ?\u0026gt; } echo trim($output, $separator) } ?\u0026gt;  showing content the_content();  showing excerpt the_excerpt(); // if we change excerpt default length // functions.php add_filter('excerpt_length', function () { return 25; })  link of title the_permalink()  adding support for fetured image // inside jfuction adv_theme_support add_theme_support('post_thumbnails'); add_action('after_setup_theme', 'adv_theme_support'); // inside view if (the_post_thumbnail()) { thie_post_thumbnail(); }  calling splitted header.php and footer.php get_header() get_footer()  showing different different title for different type of page if(is_category()){ single_cat_title(); } else if(is_author()){ the_post(); echo 'Archives By Author: ' .get_the_author(); rewind_posts(); } else if(is_tag()){ single_tag_title(); } else if(is_day()){ echo 'Archives By Day: ' .get_the_date(); } else if(is_month()){ echo 'Archives By Month: ' .get_the_date('F Y'); } else if(is_year()){ echo 'Archives By Year: ' .get_the_date('Y'); } else { echo 'Archives'; }  keeping single content page by using if else statement \u0026lt;?php if (is_search() || is_archive()) : ?\u0026gt; content of archive or search page \u0026lt;?php else: ?\u0026gt; content from regular post \u0026lt;?php endif; ?\u0026gt;  \u0026lt;?php get_template_part('content'); ?\u0026gt;  conditionally showing content incase of single page if (is_single()) { the_content() }else { the_excerpt() }  post format support add_theme_support('post-formats', ['aside', 'gallery', 'links']) // dashboard/posts/newpost in side bar we will see a format box // from where we can select appropriate format  if we have use post-formats we have to pass 2nd paramater in get_template_part function when calling\nget_template_part('content', get_post_format());  we can specify content for individual type by creating following file\n content-gallery.php content-aside.php content-link.php  for showing page we have to create page.php for specific page we have to create page-specific.php. like page-about.php. Rather using template is good idea\nmaking a template /* Template Name: Company Layout */ // we will get option in the right sidebar to choose template  how to show all pages in wp wp_list_pages()  if we want to filtered list of pages we have to pass arguments\n$args = [ 'child_of' =\u0026gt; get_top_parent(), 'title_li' =\u0026gt; '' ]; // here get_top_parent() user defined function \u0026lt;php wp_list_pages($args) ?\u0026gt;  function get_top_parent() { global $post; if ($post-\u0026gt;post_parent) { $ancestors = get_post_ancestors($post-\u0026gt;ID); return $ancestors[0] } return $post-\u0026gt;ID; }  // confused \u0026lt;a href=\u0026quot;\u0026lt;?php echo get_the_permalink(get_top_parent()) ?\u0026gt;\u0026quot;\u0026gt;\u0026lt;?php get_the_title(get_top_parent()) ?\u0026gt;\u0026lt;/a\u0026gt;  // functions.php function page_is_parent() { global $post; $pages-\u0026gt;get_pages('child_of='.$post-\u0026gt;ID); return count($pages) // if its more than zero its parent }  if(page_is_parent() || $post-\u0026gt;post_parent \u0026gt; 0) { // it means it has child so we are going to show child }  widget // functions.php function init() { register_sidebar([ 'name' =\u0026gt; 'Sidebar', 'id' =\u0026gt; 'sidebar', 'before_widget' =\u0026gt; '\u0026lt;div class='block'\u0026gt;', 'after_widget' =\u0026gt; '\u0026lt;/div\u0026gt;', 'before_title' =\u0026gt; '\u0026lt;h2 class=\u0026quot;title\u0026quot;\u0026gt;', 'after_title' =\u0026gt; '\u0026lt;/h3\u0026gt;', ]); } add_action('widgets_init', 'init_widget'); // we can set widget inside dashboard //showing in view page if (is_active_sidebar('sidebar')) { dynamic_sidebar('sidebar') }  comments //single.php comments_template()  if we want to change the comment template\n//from where he got comments I dont know $args = [\u0026quot;getting form wp website by searching wp_list_list_comments\u0026quot;]; wp_list_comments($args, $comments)  for comments form\n$form_args = ['from up website searching for comments form']; comment_form($form_args);  "
},
{
	"uri": "/math/math-test/",
	"title": "Math Test",
	"tags": [],
  "content": " math test for latex  When \\(a \\ne 0\\), there are two solutions to \\( ax^2 + bx + c = 0\\) and they are  \\( x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\)  hello  hello  When \\(a \\ne 0\\), there are two solutions to \\( ax^2 + bx + c = 0 \\) and they are  $$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.$$   hello  When \\(a \\ne 0\\), there are two solutions to \\( ax^2 + bx + c = 0 \\) and they are  $$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.$$   hello  When \\(a \\ne 0\\), there are two solutions to \\( ax^2 + bx + c = 0 \\) and they are  $$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.$$   hello "
},
{
	"uri": "/daily-journal/daily-journal-example/",
	"title": "Daily Journal Example",
	"tags": [],
  "content": ""
},
{
	"uri": "/daily-science/daily-science-example/",
	"title": "Daily Science Example",
	"tags": [],
  "content": ""
},
{
	"uri": "/tutorials/tutorial-101/",
	"title": "Tutorial 101",
	"tags": [],
  "content": ""
},
{
	"uri": "/bangla/bangla-101/",
	"title": "Bangla 101",
	"tags": [],
  "content": ""
},
{
	"uri": "/english/english-101/",
	"title": "English 101",
	"tags": [],
  "content": ""
},
{
	"uri": "/bangladesh-affairs/bangladesh-affairs-101/",
	"title": "Bangladesh Affairs 101",
	"tags": [],
  "content": ""
},
{
	"uri": "/international-affairs/diplomatic-term/",
	"title": "Diplomatic Term",
	"tags": ["international affairs", "diplomat"],
  "content": ""
},
{
	"uri": "/international-affairs/united-nations/",
	"title": "United Nations",
	"tags": ["international affairs"],
  "content": ""
},
{
	"uri": "/decks/codeigniter/",
	"title": "CodeIgniter",
	"tags": ["php", "codeigniter"],
  "content": " 1 - setting up base url // file: application/config.php $config['base_url'] = 'http://localhost:8000';  2 - to load a view // file: controllers \u0026gt; Properties.php class Properties extends CI_Controller { public function index() { $this-\u0026gt;load-\u0026gt;view('layouts/header'); $this-\u0026gt;load-\u0026gt;view('layouts/navbar'); $this-\u0026gt;load-\u0026gt;view('properties/index') $this-\u0026gt;load-\u0026gt;view('layouts/footer'); } }  3 - automatic url in codeigniter index.php/{cotroller}/{method}/[param1]/[param2]  4 - passing value in to the view $data['user_name'] = 'Bernard'; $data['status_group'] = ['all', 'available', 'unavailable']; $this-\u0026gt;load-\u0026gt;view('properties/index', $data)  5 - controller with params how codeIgniter making route automatically\npublic function show($id) { $data['id'] = $id; $this-\u0026gt;load-\u0026gt;view('properties/show', $data) }  6 - model model should hold the business role. eg. In laravel model we hidden some properties using protected hidden\n// file: models/Property.php class Property extends CI_MODEL { public function __construct() { parent::__construct(); } public function get() { return \u0026quot;4 bedroom 2 story house\u0026quot; } } // using model in controller // controllers/properties $this-\u0026gt;load-\u0026gt;model('Property'); $data['name'] = $this-\u0026gt;Property-\u0026gt;get(); //\u0026quot;4 bedroom 2 story house\u0026quot; $this-\u0026gt;load-\u0026gt;view('properties/index', $data);  7 - url helper // file: controllers/properties.php function: index $this-\u0026gt;load-\u0026gt;helper('url'); // view file echo base_url('assets/images/imagename.jpg'); echo site_url('properties/show/1'); // for href  8 - autoload helper globally like url // file: config/autoload.php $autoload['helper'] = ['url']  9 - database config // file: config/database.php $db['default'] = [ ....., 'username' =\u0026gt; $_ENV['DB_USER'], 'password' =\u0026gt; $_ENV['PASSWORD'], 'database' =\u0026gt; $_ENV['DB_NAME'], ...... ]  10 - connecting database //file: models/Property.php public function connection_test() { $this-\u0026gt;load-\u0026gt;database('default', true) } // testing connection from controller // file: controllers/Properties.php public function db_test { $this-\u0026gt;load-\u0026gt;model('Property'); $this-\u0026gt;Property-\u0026gt;connection_test(); } // passing database credential using $_ENV super global for testing // env DB_USER=root DB_PASSWORD=root DB_DATABASE=ci_course php -S localhost:8080  11 - autoload model globally instead of single function // file: config/autoload.php $autoload['model'] = ['Property'] // case sensitive  12 - how to connect to database using model // file: models/Propery.php // loading connection to whole model public function __construct { parent::__construct(); $this-\u0026gt;db = $this-\u0026gt;load-\u0026gt;database('default', true); } // testing to get database version public version get_version() { return $this-\u0026gt;db-\u0026gt;query('SELECT VERSION()'); } // file: controllers/Properites.php $version = $this-\u0026gt;Property-\u0026gt;get_version(); $data['version'] = $version-\u0026gt;conn_id-\u0026gt;server_info; $this-\u0026gt;load-\u0026gt;view('properties/index', $data);  13 - getting all row from database table // model file: models/Property.php public function all() { $result_set = $this-\u0026gt;db-\u0026gt;get('poperties'); return $result_set-\u0026gt;result_array(); } // controller file: controllers/Properties.php $data['properties'] = $this-\u0026gt;Property-\u0026gt;all(); $this-\u0026gt;load-\u0026gt;view('properties/index', $data); // views - now i can iterate in properties  14 - getting single row like laravel show function // file: models/Propery.php public function get($id) { $where['id'] =\u0026gt; $id; $this-\u0026gt;db-\u0026gt;get_where('properties', $where); } // file: controllers/Properties.php public function edit($id) { $data['property'] = $this-\u0026gt;Property-\u0026gt;get($id); $this-\u0026gt;load-\u0026gt;view('properties/edit', $data); }  15 - update // file: models/Propery.php\npublic function update($id, $new_data) { $where['id'] = $id; $this-\u0026gt;db-\u0026gt;update('properties', $new_data, $where); } // file: controllers/Properties.php public function edit($id) { if ($_POST) { $new_data['name'] = $this-\u0026gt;input-\u0026gt;post('name'); $new_data['description'] = $this-\u0026gt;input-\u0026gt;post('description'); $this-\u0026gt;Property-\u0026gt;update($id, $new_data); redirect('properties/index'); } }  16 - redirect redirect('properties/index')  18 - autoload session // file: config/autoload.php $autoload['libraries'] = ['session']; // file: config/config.php $config['sess_save_path'] = sys_get_temp_dir() // file controllers/Properties.php $session_data['selected_filter'] = $this-\u0026gt;input-\u0026gt;get('filter'); $this-\u0026gt;session-\u0026gt;set_userdata($session_data); // pass variable to the view $data['selected_filter'] = $this-\u0026gt;session-\u0026gt;selected_filter; $this-\u0026gt;load-\u0026gt;view('layouts/footer', $data); // file: views/properties/index.php if (empty($selected_filter)) { // some htmml }  19 - manipulating browser using output class public function kml_export() { $this-\u0026gt;output-\u0026gt;set_content_type('application/xml') $this-\u0026gt;load-\u0026gt;view('properties/kml_xml') }  20 - force content to download $this-\u0026gt;output-\u0026gt;set_content_type('application/octet-stream') $this-\u0026gt;load-\u0026gt;view('properties/kml_xml')  21 - change the file download name $this-\u0026gt;output-\u0026gt;set_content_type('application/octet-stream') header('Content-Disposition: inline; filename=\u0026quot;real_estate_kml_export.kml\u0026quot;'); $this-\u0026gt;load-\u0026gt;view('properties/kml_xml')  22 - showing an image $image = file_get_contents('assets/images/imagename.jpg'); $this-\u0026gt;output-\u0026gt;set_content_type('jpg')-\u0026gt;set_output($image);  23 - helper for file upload // file: controllers/Properties.php $this-\u0026gt;laod-\u0026gt;helper('form') // this is the perfect example to load manual helper. since we don't need form in every where // file: views/properties.php // instead of form tag echo form_open_multipart('')  24 - file uploading public function doupload() { $config['upload_path'] = './uploads/'; $config['allowed_types'] = 'gif|jpg|png' $this-\u0026gt;load-\u0026gt;library('upload', $config); $this-\u0026gt;upload-\u0026gt;do_upload('image_file'); $data = $this-\u0026gt;upload-\u0026gt;data(); return $data['file_name'] } public function edit() { if($_POST) { $image = false; if($_FILES) { $image = $this-\u0026gt;doupload(); } if ($image) { $new_data['image'] = $image; } } $this-\u0026gt;Property-\u0026gt;update($id, $new_data); }  25 - form validation - never trust end user. $this-\u0026gt;load-\u0026gt;library('form_validation'); $this-\u0026gt;form_validation-\u0026gt;set_rules('name','Name', 'required'); $this-\u0026gt;form_validation-\u0026gt;set_rules('description','Description', 'required'); if($this-\u0026gt;form_validation-\u0026gt;run()) { } // if form is validate we will update  showing errors in form\n\u0026lt;?php if(form_error('name')): ?\u0026gt; \u0026lt;div class='alert alert-danger'\u0026gt;\u0026lt;?php echo form_error('name') ?\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;?php endif; ?\u0026gt;  26 - persist old value if(!$this-\u0026gt;form_validation-\u0026gt;run()) { // overwrite name and description key by input value $data['property']['name'] = $this-\u0026gt;input-\u0026gt;post('name'); $data['property']['description'] = $this-\u0026gt;input-\u0026gt;post('description'); // now passign $data to view }  27 - log for debug generated log file will be available inside logs/log-date-formatted.php\n// file: config/config.php $config['log_threshold'] = 4; // 4 = all message $config['log_threshold'] = 2; // 2 = debug message //file controllers/Properties.php log_message('debug', 'My first Log'); log_message('debug', 'From parameters' . print_r( $_POST, true )) // print_r 2nd parameter for return it  28 - Using composer in codeigniter First we need to create a library and added to autoload library\n// file: libraries/Composer_loader.php class Composer_loader { public function __construct() { include './vendor/autoload.php'; } } // file: config/autoload.php $autoload['libraries'] = ['Composer_loader'];  "
},
{
	"uri": "/decks/w3schools-jquery/",
	"title": "W3schools Jquery",
	"tags": ["jquery", "javascript"],
  "content": " 1 - Basic syntax $(selector).action()  2 - The Document Ready Event $(document).ready(function(){ // jQuery methods go here... }); // shorter $(function(){ // jQuery methods go here... });  3 - Selects the first \u0026lt;li\u0026gt; element of the first \u0026lt;ul\u0026gt; $(\u0026quot;ul li:first\u0026quot;)  4 - Selects the first \u0026lt;li\u0026gt; element of every \u0026lt;ul\u0026gt; $(\u0026quot;ul li:first-child\u0026quot;)  5 - Selects all \u0026lt;a\u0026gt; elements with a target attribute value equal to \u0026quot;_blank\u0026quot; $(\u0026quot;a[target='_blank']\u0026quot;)  6 - Selects all \u0026lt;a\u0026gt; elements with a target attribute value NOT equal to \u0026quot;_blank\u0026quot; $(\u0026quot;a[target!='_blank']\u0026quot;)  6 - Selects all \u0026lt;button\u0026gt; elements and \u0026lt;input\u0026gt; elements of type=\u0026quot;button\u0026quot; $(\u0026quot;:button\u0026quot;)  7 - Mouse Events  click dblclick mouseenter mouseleave mousedown mouseup hover (combination of mouseenter and mouseleave)  8 - Keyboard Events  keypress keydown keyup blur  9 - Form Events  submit change focus (attaches an event handler function to an HTML form field)  10 - Document/Window Events  load resize scroll unload  11 - Click method $(\u0026quot;p\u0026quot;).click(function(){ $(this).hide(); });  12 - The on() Method The on() method attaches one or more event handlers for the selected elements.\n$(\u0026quot;p\u0026quot;).on(\u0026quot;click\u0026quot;, function(){ $(this).hide(); });  13 - multiple event handlers to a single element: $(\u0026quot;p\u0026quot;).on({ mouseenter: function(){ $(this).css(\u0026quot;background-color\u0026quot;, \u0026quot;lightgray\u0026quot;); }, mouseleave: function(){ $(this).css(\u0026quot;background-color\u0026quot;, \u0026quot;lightblue\u0026quot;); }, click: function(){ $(this).css(\u0026quot;background-color\u0026quot;, \u0026quot;yellow\u0026quot;); } });  14 - hide in jquery $(selector).hide(speed,callback); $(\u0026quot;button\u0026quot;).click(function(){ $(\u0026quot;p\u0026quot;).hide(1000); });  15 - show in jquery $(selector).show(speed_optional,callback_optional); $(\u0026quot;button\u0026quot;).click(function(){ $(\u0026quot;p\u0026quot;).hide(1000); });  16 - jQuery toggle() combination of hide() and show() method\n$(selector).toggle(speed,callback); $(\u0026quot;button\u0026quot;).click(function(){ $(\u0026quot;p\u0026quot;).toggle(); });  17 - jquery fade method  fadeIn() show the content fadeOut() hide the content fadeToggle() fadeTo()  //syntax for fadeIn, fadeOut, fadeToggle $(selector).fadeIn(speed,callback); //syntax for fadeTo which taking 3 parameters $(selector).fadeTo(speed,opacity,callback);  18 - jQuery Effects - Sliding  slideDown() show the content slideUp() hide the content slideToggle()  $(selector).slideDown(speed,callback); $(\u0026quot;#flip\u0026quot;).click(function(){ $(\u0026quot;#panel\u0026quot;).slideDown(); });  19 - jQuery Animations - The animate() Method $(selector).animate({params},speed,callback); $(\u0026quot;button\u0026quot;).click(function(){ $(\u0026quot;div\u0026quot;).animate({ left: '250px', opacity: '0.5', height: '150px', width: '150px' }); });  20 - jQuery animate() method with relative value += $(\u0026quot;button\u0026quot;).click(function(){ $(\u0026quot;div\u0026quot;).animate({ left: '250px', height: '+=150px', width: '+=150px' }); });  21 - jQuery animate() - Using Pre-defined Values $(\u0026quot;button\u0026quot;).click(function(){ $(\u0026quot;div\u0026quot;).animate({ height: 'toggle' }); });  22 - jQuery animate() - Uses Queue Functionality if you write multiple animate() calls after each other, jQuery creates an \u0026ldquo;internal\u0026rdquo; queue with these method calls. Then it runs the animate calls ONE by ONE.\n$(\u0026quot;button\u0026quot;).click(function(){ var div = $(\u0026quot;div\u0026quot;); div.animate({height: '300px', opacity: '0.4'}, \u0026quot;slow\u0026quot;); div.animate({width: '300px', opacity: '0.8'}, \u0026quot;slow\u0026quot;); div.animate({height: '100px', opacity: '0.4'}, \u0026quot;slow\u0026quot;); div.animate({width: '100px', opacity: '0.8'}, \u0026quot;slow\u0026quot;); });  23 - jQuery stop() Method The jQuery stop() method is used to stop an animation or effect before it is finished.\n/** * stopAll parameter specifies whether also the * animation queue should be cleared or not. * Default is false, which means that only * the active animation will be stopped, * allowing any queued animations to be * performed afterwards. * * * The optional goToEnd parameter * specifies whether or not to complete * the current animation immediately. * Default is false. * */ $(selector).stop(stopAll,goToEnd); $(\u0026quot;#stop\u0026quot;).click(function(){ $(\u0026quot;#panel\u0026quot;).stop(); });  24 - jQuery Method Chaining there is a technique called chaining, that allows us to run multiple jQuery commands, one after the other, on the same element(s)\n$(\u0026quot;#p1\u0026quot;).css(\u0026quot;color\u0026quot;, \u0026quot;red\u0026quot;).slideUp(2000).slideDown(2000); //prettier format following - which should be preferred $(\u0026quot;#p1\u0026quot;).css(\u0026quot;color\u0026quot;, \u0026quot;red\u0026quot;) .slideUp(2000) .slideDown(2000);  24 - Get Content from HTML page  text() - Sets or returns the text content of selected elements html() - Sets or returns the content of selected elements (including HTML markup) val() - Sets or returns the value of form fields  25 - how to get content with the jQuery text() and html() methods alert(\u0026quot;Text: \u0026quot; + $(\u0026quot;#test\u0026quot;).text()); alert(\u0026quot;HTML: \u0026quot; + $(\u0026quot;#test\u0026quot;).html());  26 - how to get the value of an input field with the jQuery val() \u0026lt;input type=\u0026quot;text\u0026quot; id=\u0026quot;test\u0026quot; value=\u0026quot;Mickey Mouse\u0026quot;\u0026gt;\u0026lt;/p\u0026gt;  $(\u0026quot;button\u0026quot;).click(function(){ alert(\u0026quot;Value: \u0026quot; + $(\u0026quot;#test\u0026quot;).val()); });  27 - Get Attributes - attr() The jQuery attr() method is used to get attribute values.\nalert($(\u0026quot;#w3s\u0026quot;).attr(\u0026quot;href\u0026quot;));  28 - Set Content - text(), html(), and val()  text() - Sets or returns the text content of selected elements html() - Sets or returns the content of selected elements (including HTML markup) val() - Sets or returns the value of form fields ~~~js $(\u0026ldquo;#test2\u0026rdquo;).html(\u0026rdquo;Hello world!\u0026rdquo;); ~~~  29 - A Callback Function for text(), html(), and val() All of the three jQuery methods above: text(), html(), and val(), also come with a callback function. The callback function has two parameters: the index of the current element in the list of elements selected and the original (old) value. You then return the string you wish to use as the new value from the function.\n$(\u0026quot;#test1\u0026quot;).text(function(i, origText){ return \u0026quot;Old text: \u0026quot; + origText + \u0026quot; New text: Hello world! (index: \u0026quot; + i + \u0026quot;)\u0026quot;; });  30 - Set Attributes - attr() $(\u0026quot;#w3s\u0026quot;).attr(\u0026quot;href\u0026quot;, \u0026quot;https://www.w3schools.com/jquery/\u0026quot;); // set multiple attribute using attr method $(\u0026quot;#w3s\u0026quot;).attr({ \u0026quot;href\u0026quot; : \u0026quot;https://www.w3schools.com/jquery/\u0026quot;, \u0026quot;title\u0026quot; : \u0026quot;W3Schools jQuery Tutorial\u0026quot; });  31 - A Callback Function for attr() $(\u0026quot;#w3s\u0026quot;).attr(\u0026quot;href\u0026quot;, function(i, origValue){ return origValue + \u0026quot;/jquery/\u0026quot;; });  32 - Add Elements  append() - Inserts content at the end of the selected elements prepend() - Inserts content at the beginning of the selected elements after() - Inserts content after the selected elements before() - Inserts content before the selected elements ~~~js $(\u0026ldquo;p\u0026rdquo;).append(\u0026ldquo;Some appended text.\u0026rdquo;); function appendText() { var txt1 = \u0026ldquo;Text.\n\u0026rdquo;; // Create element with HTML var txt2 = $(\u0026rdquo;\n\u0026rdquo;).text(\u0026ldquo;Text.\u0026rdquo;); // Create with jQuery var txt3 = document.createElement(\u0026ldquo;p\u0026rdquo;); // Create with DOM txt3.innerHTML = \u0026ldquo;Text.\u0026rdquo;; $(\u0026ldquo;body\u0026rdquo;).append(txt1, txt2, txt3); // Append the new elements } ~~~  33 - Remove Elements  remove() - Removes the selected element (and its child elements) empty() - Removes the child elements from the selected element ~~~js $(\u0026ldquo;#div1\u0026rdquo;).remove(); $(\u0026ldquo;#div1\u0026rdquo;).empty(); ~~~  34 - jQuery Manipulating CSS  addClass() - Adds one or more classes to the selected elements removeClass() - Removes one or more classes from the selected elements toggleClass() - Toggles between adding/removing classes from the selected elements css() - Sets or returns the style attribute  $(\u0026quot;button\u0026quot;).click(function(){ $(\u0026quot;h1, h2, p\u0026quot;).addClass(\u0026quot;blue\u0026quot;); $(\u0026quot;div\u0026quot;).addClass(\u0026quot;important\u0026quot;); // multiple class by giving space $(\u0026quot;#div1\u0026quot;).addClass(\u0026quot;important blue\u0026quot;); // remove class $(\u0026quot;h1, h2, p\u0026quot;).removeClass(\u0026quot;blue\u0026quot;); });  35 - jQuery - css() The css() method sets or returns one or more style properties for the selected elements.\n// return propertyname css(\u0026quot;propertyname\u0026quot;); //set property name css(\u0026quot;propertyname\u0026quot;,\u0026quot;value\u0026quot;); $(\u0026quot;p\u0026quot;).css(\u0026quot;background-color\u0026quot;, \u0026quot;yellow\u0026quot;);  36 - Set Multiple CSS Properties css({\u0026quot;propertyname\u0026quot;:\u0026quot;value\u0026quot;,\u0026quot;propertyname\u0026quot;:\u0026quot;value\u0026quot;,...}); $(\u0026quot;p\u0026quot;).css({\u0026quot;background-color\u0026quot;: \u0026quot;yellow\u0026quot;, \u0026quot;font-size\u0026quot;: \u0026quot;200%\u0026quot;});  37 - jQuery Dimension Methods  width() height() innerWidth() innerHeight() outerWidth() outerHeight()  38 - jquery width and height method  The width() method sets or returns the width of an element (excludes padding, border and margin). The height() method sets or returns the height of an element (excludes padding, border and margin).  $(\u0026quot;button\u0026quot;).click(function(){ var txt = \u0026quot;\u0026quot;; txt += \u0026quot;Width: \u0026quot; + $(\u0026quot;#div1\u0026quot;).width() + \u0026quot;\u0026lt;/br\u0026gt;\u0026quot;; txt += \u0026quot;Height: \u0026quot; + $(\u0026quot;#div1\u0026quot;).height(); $(\u0026quot;#div1\u0026quot;).html(txt); });  39 - jQuery innerWidth() and innerHeight() Methods  The innerWidth() return (elementWidth + padding) The innerHeight() return (elementHeight + padding)  $(\u0026quot;button\u0026quot;).click(function(){ var txt = \u0026quot;\u0026quot;; txt += \u0026quot;Inner width: \u0026quot; + $(\u0026quot;#div1\u0026quot;).innerWidth() + \u0026quot;\u0026lt;/br\u0026gt;\u0026quot;; txt += \u0026quot;Inner height: \u0026quot; + $(\u0026quot;#div1\u0026quot;).innerHeight(); $(\u0026quot;#div1\u0026quot;).html(txt); });  40 - jQuery outerWidth() and outerHeight() Methods  The outerWidth() return (elementWidth + padding + border) The outerHeight()return (elementHeight + padding + border) The outerWidth(true) return (elementWidth + padding + border + margin) The outerHeight(true)return (elementHeight + padding + border + margin)  var txt = \u0026quot;Outer height: \u0026quot; + $(\u0026quot;#div1\u0026quot;).outerHeight(); var txt = \u0026quot;Outer height: \u0026quot; + $(\u0026quot;#div1\u0026quot;).outerHeight(true);  41 - document and window width $(document).width() $(document).height() $(window).width() $(window).height()  42 - sets the width and height of a specified \u0026lt;div\u0026gt; element: $(\u0026quot;button\u0026quot;).click(function(){ $(\u0026quot;#div1\u0026quot;).width(500).height(500); });  43 - What is Traversing? jQuery traversing, which means \u0026ldquo;move through\u0026rdquo;, are used to \u0026ldquo;find\u0026rdquo; (or select) HTML elements based on their relation to other elements. Start with one selection and move through that selection until you reach the elements you desire.\n44 - jQuery Traversing - Ancestors An ancestor is a parent, grandparent, great-grandparent, and so on. * parent() * parents() * parentsUntil()\n45 - jQuery parent() The parent() method returns the direct parent element of the selected element. This method only traverse a single level up the DOM tree.\n$(\u0026quot;span\u0026quot;).parent();  46 - jQuery parents() Method The parents() method returns all ancestor elements of the selected element, all the way up to the document\u0026rsquo;s root element (\u0026lt;html\u0026gt;).\n$(\u0026quot;span\u0026quot;).parents(); $(\u0026quot;span\u0026quot;).parents(\u0026quot;ul\u0026quot;);  47 - jQuery parentsUntil() Method The parentsUntil() method returns all ancestor elements between two given arguments. The following example returns all ancestor elements between a \u0026lt;span\u0026gt; and a \u0026lt;div\u0026gt; element\n$(\u0026quot;span\u0026quot;).parentsUntil(\u0026quot;div\u0026quot;);  48 - jQuery Traversing - Descendants A descendant is a child, grandchild, great-grandchild, and so on. * children() * find()\n49 - jQuery children() Method The children() method returns all direct children of the selected element. This method only traverse a single level down the DOM tree.\n$(\u0026quot;div\u0026quot;).children();  You can also use an optional parameter to filter the search for children. The following example returns all \u0026lt;p\u0026gt; elements with the class name \u0026ldquo;first\u0026rdquo;, that are direct children of \u0026lt;div\u0026gt;:\n$(\u0026quot;div\u0026quot;).children(\u0026quot;p.first\u0026quot;);  50 - Query find() Method The find() method returns descendant elements of the selected element, all the way down to the last descendant. The following example returns all \u0026lt;span\u0026gt; elements that are descendants of \u0026lt;div\u0026gt;\n$(\u0026quot;div\u0026quot;).find(\u0026quot;span\u0026quot;);  The following example returns all descendants of \u0026lt;div\u0026gt;\n$(\u0026quot;div\u0026quot;).find(\u0026quot;*\u0026quot;);  51 - Traversing Sideways in The DOM Tree  siblings() next() nextAll() nextUntil() prev() prevAll() prevUntil()  (next, nextAll, nextAll) sounds like (parent, parents, parentsUntil)\n52 - jQuery siblings() Method The siblings() method returns all sibling elements of the selected element. The following example returns all sibling elements of \u0026lt;h2\u0026gt;\n$(\u0026quot;h2\u0026quot;).siblings();  You can also use an optional parameter to filter the search for siblings. The following example returns all sibling elements of \u0026lt;h2\u0026gt; that are \u0026lt;p\u0026gt; elements\n$(\u0026quot;h2\u0026quot;).siblings(\u0026quot;p\u0026quot;);  53 - jQuery next() Method The next() method returns the next sibling element of the selected element. The following example returns the next sibling of \u0026lt;h2\u0026gt;\n$(\u0026quot;h2\u0026quot;).next();  54 - jQuery nextAll() Method The nextAll() method returns all next sibling elements of the selected element. The following example returns all next sibling elements of \u0026lt;h2\u0026gt;\n$(\u0026quot;h2\u0026quot;).nextAll();  55 - jQuery nextUntil() Method The nextUntil() method returns all next sibling elements between two given arguments. The following example returns all sibling elements between a \u0026lt;h2\u0026gt; and a \u0026lt;h6\u0026gt; element\n$(\u0026quot;h2\u0026quot;).nextUntil(\u0026quot;h6\u0026quot;);  56 - jQuery prev(), prevAll() \u0026amp; prevUntil() Methods The prev(), prevAll() and prevUntil() methods work just like the methods (next, nextAll, nextUntil) but with reverse functionality: they return previous sibling elements (traverse backwards along sibling elements in the DOM tree, instead of forward).\n57 - jQuery Traversing - Filtering  first() last() eq() filter() not()  The most basic filtering methods are first(), last() and eq(), which allow you to select a specific element based on its position in a group of elements. Other filtering methods, like filter() and not() allow you to select elements that match, or do not match, a certain criteria.\n58 - jQuery first() Method The first() method returns the first element of the specified elements. The following example selects the first \u0026lt;div\u0026gt; element\n$(\u0026quot;div\u0026quot;).first().css(\u0026quot;background-color\u0026quot;, \u0026quot;yellow\u0026quot;);  59 - jQuery last() Method The last() method returns the last element of the specified elements.\nThe following example selects the last \u0026lt;div\u0026gt; element\n$(\u0026quot;div\u0026quot;).last().css(\u0026quot;background-color\u0026quot;, \u0026quot;yellow\u0026quot;);  60 - jQuery eq() method The eq() method returns an element with a specific index number of the selected elements. The index numbers start at 0, so the first element will have the index number 0 and not 1. The following example selects the second  element (index number 1):\n$(\u0026quot;p\u0026quot;).eq(1).css(\u0026quot;background-color\u0026quot;, \u0026quot;yellow\u0026quot;);  61 - jQuery filter() Method The filter() method lets you specify a criteria. Elements that do not match the criteria are removed from the selection, and those that match will be returned. The following example returns all \u0026lt;p\u0026gt; elements with class name \u0026ldquo;intro\u0026rdquo;:\n$(\u0026quot;p\u0026quot;).filter(\u0026quot;.intro\u0026quot;).css(\u0026quot;background-color\u0026quot;, \u0026quot;yellow\u0026quot;);  62 - jQuery not() Method ( opposite of filter method ) The not() method returns all elements that do not match the criteria. The following example returns all \u0026lt;p\u0026gt; elements that do not have class name \u0026ldquo;intro\u0026rdquo;:\n$(\u0026quot;p\u0026quot;).not(\u0026quot;.intro\u0026quot;).css(\u0026quot;background-color\u0026quot;, \u0026quot;yellow\u0026quot;);  63 - jQuery - AJAX load() Method The jQuery load() method is a simple, but powerful AJAX method.\n$(selector).load(URL,data,callback);  It is also possible to add a jQuery selector to the URL parameter. The following example loads the content of the element with id=\u0026quot;p1\u0026quot;, inside the file \u0026ldquo;demo_test.txt\u0026rdquo;, into a specific \u0026lt;div\u0026gt; element\n$(\u0026quot;#div1\u0026quot;).load(\u0026quot;demo_test.txt #p1\u0026quot;);  The optional callback parameter specifies a callback function to run when the load() method is completed. The callback function can have different parameters: * responseTxt - contains the resulting content if the call succeeds * statusTxt - contains the status of the call * xhr - contains the XMLHttpRequest object\n$(\u0026quot;button\u0026quot;).click(function(){ $(\u0026quot;#div1\u0026quot;).load(\u0026quot;demo_test.txt\u0026quot;, function(responseTxt, statusTxt, xhr){ if(statusTxt == \u0026quot;success\u0026quot;) { alert(\u0026quot;External content loaded successfully!\u0026quot;); } if(statusTxt == \u0026quot;error\u0026quot;) { alert(\u0026quot;Error: \u0026quot; + xhr.status + \u0026quot;: \u0026quot; + xhr.statusText); } }); });  64 - jQuery $.get() Method The $.get() method requests data from the server with an HTTP GET request.\n$.get(URL,callback); $.get(\u0026quot;demo_test.asp\u0026quot;, function(data, status){ alert(\u0026quot;Data: \u0026quot; + data + \u0026quot;\\nStatus: \u0026quot; + status); });  65 - jQuery $.post() Method The $.post() method requests data from the server using an HTTP POST request.\n$.post(URL,data,callback); $(\u0026quot;button\u0026quot;).click(function(){ $.post(\u0026quot;demo_test_post.asp\u0026quot;, { name: \u0026quot;Donald Duck\u0026quot;, city: \u0026quot;Duckburg\u0026quot; }, function(data, status){ alert(\u0026quot;Data: \u0026quot; + data + \u0026quot;\\nStatus: \u0026quot; + status); }); });  66 - jQuery noConflict() Method The noConflict() method releases the hold on the $ shortcut identifier, so that other scripts can use it.\nYou can of course still use jQuery, simply by writing the full name instead of the shortcut:\n$.noConflict(); jQuery(document).ready(function(){ jQuery(\u0026quot;button\u0026quot;).click(function(){ jQuery(\u0026quot;p\u0026quot;).text(\u0026quot;jQuery is still working!\u0026quot;); }); });  The noConflict() method returns a reference to jQuery, that you can save in a variable, for later use.\nvar jq = $.noConflict(); jq(document).ready(function(){ jq(\u0026quot;button\u0026quot;).click(function(){ jq(\u0026quot;p\u0026quot;).text(\u0026quot;jQuery is still working!\u0026quot;); }); });  If you have a block of jQuery code which uses the $ shortcut and you do not want to change it all, you can pass the $ sign in as a parameter to the ready method\n$.noConflict(); jQuery(document).ready(function($){ $(\u0026quot;button\u0026quot;).click(function(){ $(\u0026quot;p\u0026quot;).text(\u0026quot;jQuery is still working!\u0026quot;); }); });  67 - a list filter \u0026lt;input id=\u0026quot;myInput\u0026quot; type=\u0026quot;text\u0026quot; placeholder=\u0026quot;Search..\u0026quot;\u0026gt; \u0026lt;br\u0026gt; \u0026lt;ul id=\u0026quot;myList\u0026quot;\u0026gt; \u0026lt;li\u0026gt;First item\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Second item\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Third item\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Fourth\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt;  $(\u0026quot;#myInput\u0026quot;).on(\u0026quot;keyup\u0026quot;, function() { var value = $(this).val().toLowerCase(); $(\u0026quot;#myList li\u0026quot;).filter(function() { $(this).toggle($(this).text().toLowerCase().indexOf(value) \u0026gt; -1) }); });  68 - a table filter \u0026lt;input id=\u0026quot;myInput\u0026quot; type=\u0026quot;text\u0026quot; placeholder=\u0026quot;Search..\u0026quot;\u0026gt; \u0026lt;br\u0026gt; \u0026lt;table\u0026gt; \u0026lt;thead\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;Firstname\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Lastname\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Email\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/thead\u0026gt; \u0026lt;tbody id=\u0026quot;myTable\u0026quot;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;John\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;Doe\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;john@example.com\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;Anja\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;Ravendale\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;a_r@test.com\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/tbody\u0026gt; \u0026lt;/table\u0026gt;  $(\u0026quot;#myInput\u0026quot;).on(\u0026quot;keyup\u0026quot;, function() { var value = $(this).val().toLowerCase(); $(\u0026quot;#myTable tr\u0026quot;).filter(function() { $(this).toggle($(this).text().toLowerCase().indexOf(value) \u0026gt; -1) }); });  69 - filter anything inside a div \u0026lt;input id=\u0026quot;myInput\u0026quot; type=\u0026quot;text\u0026quot; placeholder=\u0026quot;Search..\u0026quot;\u0026gt; \u0026lt;div id=\u0026quot;myDIV\u0026quot;\u0026gt; \u0026lt;p\u0026gt;I am a paragraph.\u0026lt;/p\u0026gt; \u0026lt;div\u0026gt;I am a div element inside div.\u0026lt;/div\u0026gt; \u0026lt;button\u0026gt;I am a button\u0026lt;/button\u0026gt; \u0026lt;button\u0026gt;Another button\u0026lt;/button\u0026gt; \u0026lt;p\u0026gt;Another paragraph.\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt;  $(\u0026quot;#myInput\u0026quot;).on(\u0026quot;keyup\u0026quot;, function() { var value = $(this).val().toLowerCase(); $(\u0026quot;#myDIV *\u0026quot;).filter(function() { $(this).toggle($(this).text().toLowerCase().indexOf(value) \u0026gt; -1) }); });  "
}]


